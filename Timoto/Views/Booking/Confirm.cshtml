@using Microsoft.Extensions.Options
@using Timoto.DAL
@model Timoto.ViewModels.BookingConfirmVM
@inject IOptions<StripeSettings> Stripe
@{
    ViewData["Title"] = "Confirm Booking";
}
<style>
    .booking-background-wrapper {
        min-height: 100vh;
        background: url('/assets/images/background/3 - Copy.jpg') center/cover no-repeat;
        display: flex;
        align-items: center;
        justify-content: center;
        padding-top: 120px;
    }

    .booking-card {
        background-color: rgba(255, 255, 255, 0.95);
        padding: 40px;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        max-width: 900px;
        width: 100%;
    }

    label {
        font-weight: 600;
    }

    #payment-section {
        margin-top: 30px;
        display: none;
    }
</style>

<div class="booking-background-wrapper">
    <div class="booking-card">
        <h2 class="text-center mb-4">Confirm Your Booking</h2>

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Full Name</label>
                    <input type="text" value="@Model.FullName" class="form-control" readonly />
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" value="@Model.Email" class="form-control" readonly />
                </div>
                <div class="mb-3">
                    <label class="form-label">Phone</label>
                    <input type="text" value="@Model.Phone" class="form-control" readonly />
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Booking Summary</label>
                    <textarea class="form-control" rows="6" readonly>@Model.BookingSummary</textarea>
                </div>
            </div>
        </div>

        <div class="text-center">
            <button type="button" class="btn btn-success px-5 mt-3" onclick="redirectToStripe()">Confirm Booking</button>

        </div>

        <div id="payment-section">
            <form id="stripe-form" asp-action="ConfirmBooking" method="post">
                @Html.AntiForgeryToken()

                <input type="hidden" name="BookingVM.CarId" value="@Model.BookingVM.CarId" />
                <input type="hidden" name="BookingVM.PickupDate" value="@Model.BookingVM.PickupDate" />
                <input type="hidden" name="BookingVM.PickupTime" value="@Model.BookingVM.PickupTime" />
                <input type="hidden" name="BookingVM.CollectionDate" value="@Model.BookingVM.CollectionDate" />
                <input type="hidden" name="BookingVM.CollectionTime" value="@Model.BookingVM.CollectionTime" />
                <input type="hidden" name="SelectedCardId" value="0" />

                <div class="my-4" id="card-element"></div>
                <div id="stripe-error" class="text-danger text-center mb-3"></div>

                <div class="text-center">
                    <button type="button" id="pay-btn" class="btn btn-primary">Pay</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        const stripe = Stripe('@Stripe.Value.PublishableKey');

        async function redirectToStripe() {
            const payload = {
                CarId: @Model.BookingVM.CarId,
                PickupDate: "@Model.BookingVM.PickupDate",
                PickupTime: "@Model.BookingVM.PickupTime",
                CollectionDate: "@Model.BookingVM.CollectionDate",
                CollectionTime: "@Model.BookingVM.CollectionTime",
                FullName: "@Model.FullName",
                Email: "@Model.Email",
                Phone: "@Model.Phone",
                UserId: "@Model.UserId",  
                TotalAmount: @Model.BookingVM.TotalAmount
            };

            const response = await fetch('/Booking/StartStripeCheckout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            if (!response.ok) {
                alert("Error creating checkout session");
                return;
            }

            const data = await response.json();

            const result = await stripe.redirectToCheckout({
                sessionId: data.sessionId
            });

            if (result.error) {
                alert(result.error.message);
            }
        }
    </script>
}
